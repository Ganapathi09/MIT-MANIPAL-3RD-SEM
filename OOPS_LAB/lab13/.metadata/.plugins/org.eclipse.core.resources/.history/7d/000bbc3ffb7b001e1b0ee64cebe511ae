package application;

import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;
import javafx.scene.text.Font;
import javafx.stage.Stage;

public class GCDCalculator extends Application {

    @Override
    public void start(Stage primaryStage) {
        // Creating labels, text fields, button, and result label
        Label num1Label = new Label("Enter first positive integer:");
        Label num2Label = new Label("Enter second positive integer:");
        TextField num1TextField = new TextField();
        TextField num2TextField = new TextField();
        Button calculateButton = new Button("Calculate GCD");
        Label resultLabel = new Label();
        resultLabel.setFont(Font.font(16)); // Setting font size for the result label

        // Creating a GridPane layout and setting padding, hgap, and vgap
        GridPane gridPane = new GridPane();
        gridPane.setPadding(new Insets(10));
        gridPane.setHgap(10);
        gridPane.setVgap(10);

        // Adding nodes to the GridPane
        gridPane.add(num1Label, 0, 0);
        gridPane.add(num1TextField, 1, 0);
        gridPane.add(num2Label, 0, 1);
        gridPane.add(num2TextField, 1, 1);
        gridPane.add(calculateButton, 1, 2);
        gridPane.add(resultLabel, 1, 3);

        // Handling button click event to calculate and display GCD
        calculateButton.setOnAction(event -> {
            try {
                int num1 = Integer.parseInt(num1TextField.getText());
                int num2 = Integer.parseInt(num2TextField.getText());
                int gcd = calculateGCD(num1, num2);
                resultLabel.setText("Numbers: " + num1 + ", " + num2 +
